version: '2.2'
services:
  kibana:
    profiles:
      - donotstart
    image: docker.elastic.co/kibana/kibana:7.2.0
    ports:
      - 5601:5601
    volumes:
      - ./config/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      #  - traefik_default
      - default

  elasticsearch:
    profiles:
      - donotstart
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0 #:6.6.0
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    #volumes:
    #  - esdata1:/usr/share/elasticsearch/data
    networks:
      #  - traefik_default
      - default

  logstash:
    profiles:
      - donotstart
    image: docker.elastic.co/logstash/logstash:7.2.0
    volumes:
      - ./config/logstash-pipeline:/usr/share/logstash/pipeline
    networks:
      #  - traefik_default
      - default

  prometheus:
    profiles:
      - donotstart
    image: prom/prometheus
    ports:
      - 9090:9090
    #volumes: 
    #  - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    #  - /prometheus-data
    networks:
      #  - traefik_default
      - default

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mymongosecret
      MONGO_INITDB_DATABASE: mymongodb
    #ports:
    #  - 27017:27017
    volumes:
      - mongo_data:/data/db
    networks:
      #  - traefik_default
      - default

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: mymongosecret
      ME_CONFIG_MONGODB_URL: mongodb://root:mymongosecret@mongo:27017/

  grafana:
    profiles:
      - donotstart
    image: grafana/grafana
    ports:
      - 3000:3000
    networks:
      #  - traefik_default
      - default

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: mypgsecretpassword
      POSTGRES_USER: mypguser
      POSTGRES_DB: mypgdb
      PGDATA: /data
    #ports:
    #  - 5432:5432
    volumes:
      - "pg_data:/data"
    networks:
      #  - traefik_default
      - default

  adminer:
    profiles:
      - donotstart
    image: adminer
    ports:
      - 8082:8080
    networks:
      #  - traefik_default
      - default

  kafka:
    image: 'bitnami/kafka:3.9.0'
    #ports:
    #  - '9092:9092'
    #  - '9094:9094'
    environment:
      #- KAFKA_BROKER_ID=1
      #- KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      #- ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      #- KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      #- KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      #- KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      #- KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      #  - traefik_default
      - default

volumes:
  pg_data:
    driver: "local"

  mongo_data:
    driver: "local"

  kafka_data:
    driver: "local"
#volumes:
#  cft_data:
#    driver: "local"


#secrets:
#  cft-license:
#    file: ./licenses/cft-license.txt

networks:
  #traefik_default:
  #  external: true
  default:
    driver: bridge
