# Default values for transfer-cft.

replicaCount: 1

image:
  repository: eventrouter/eventrouter
  tag: 3.0

  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  pullSecrets:
     - name: regcred

## String to partially override event-router.fullname template (will maintain the release name)
nameOverride: ""

## String to fully override event-router.fullname template
fullnameOverride: ""

## Additional Labels
## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  ## If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary.
  # limits:
  #   cpu: 1000m
  #   memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3

####################################
# Security Parameters - replace false per true to restrict deployment
# Remove {} and uncomment the values
####################################
serviceAccount:
  create: false
  # name: ~

rbac:
  create: false

pspEnable: false

## Annotations
## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}

# Security Context for all containers in the pod.
# https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#podsecuritycontext-v1-core
podSecurityContext:
  runAsUser: 1000
  runAsGroup: 0
  fsGroup: 1000
  # supplementalGroups: []

# Security Context for the Transfer CFT container specifically
# https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#securitycontext-v1-core
containerSecurityContext:
  # privileged: false
  # allowPrivilegeEscalation: false
  # readOnlyRootFilesystem: false
  # capabilities:
  #   drop:
  #     - ALL
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 0

## Name of the priority class to be used, priority class needs to be created beforehand
## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
priorityClassName: ""

####################################
# Pod location inside the cluster
####################################

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

####################################
# MAIN EVENT ROUTER CONFIGURATION
####################################

eventrouter:
  # Set to true to accept the applicable General Terms and Conditions,
  # located at https://www.axway.com/en/legal/contract-documents
  accept_general_conditions: false
  
  fqdn: "" # A fully qualified domain name (FQDN) or an  IP address used to connect to your Event Router deployment.
  instanceId: "eventrouter-1"
  logLevel: "info"  # supported values: trace, debug, info, warn, error, fatal
  logUseLocalTime: false # log uses local time

  # port used to expose Prometheus metrics: http://host:8080/metrics ,
  # liveness: http://host:8080/live and readness: ttp://host:8080/ready services
  httpPort:
      port: 8080
      # nodePort: 8080
      # targetPort: 8080

  ## The Event Router configuration file containing the stream definitions.
  configuration:
    fileName: event-router-yml
    createConfigMap: true
    localFile: conf/event-router.yml
    # existingConfigMap:
    #   keyRef: {} # key inside the configMap

  ## For the next parameters (you can add as many certificates as desired):
  # - variableInConf ==>> name of the ENV_VARIABLE referenced in the configuration file
  # - createSecretFile ==>> create secret file or not
  # - secretName ==>> name of the file inside the secret
  # - localFile ==>> where is located the local file - use relative path
  # - existingSecretFile ==>> used only if the secret already exist
  certificates: []
    #- name: qlt_server_cert
    #  variableInConf: ER_QLT_SERVER_CERT
    #  mountPath: /run/secrets/qlt_server_cert.pem
    #  secretName: qlt-server-cert
    #  createSecretFile: false
    #  localFile: conf/qlt_server_cert.pem
    #  existingSecretFile:
    #    keyRef: {} # key inside the secret
    #- name: qlt_server_key
    #  variableInConf: ER_QLT_SERVER_KEY
    #  mountPath:  /run/secrets/qlt_server_key.pem
    #  secretName: qlt-server-key
    #  createSecretFile: false
    #  localFile: conf/qlt_server_key.pem
    #  existingSecretFile:
    #    keyRef: {} # key inside the secret
    #- name: qlt_server_ca
    #  variableInConf: ER_QLT_SERVER_CA
    #  secretName: qlt-server-ca
    #  createSecretFile: false
    #  localFile: {} # conf/qlt_server_ca.pem
    #  existingSecretFile:
    #    keyRef: {} # key inside the secret
    #- name: sentinel_ca
    #  variableInConf: ER_SENTINEL_CA
    #  secretName: sentinel-ca
    #  createSecretFile: false
    #  localFile: {} # conf/sentinel_ca.pem
    #  existingSecretFile:
    #    keyRef: {} # key inside the secret
    #- name: kafka_ca
    #  variableInConf: ER_KAFKA_SERVER_CA
    #  secretName: kafka-ca
    #  createSecretFile: false
    #  localFile: {} # conf/kafka_ca.pem
    #  existingSecretFile:
    #    keyRef: {} # key inside the secret
    #- name: kafka_client_cert
    #  variableInConf: ER_KAFKA_CLIENT_CERT
    #  secretName: kafka-client-cert
    #  createSecretFile: false
    #  localFile: {} # conf/kafka_client_cert.pem
    #  existingSecretFile:
    #    keyRef: {} # key inside the secret
    #- name: kafka_client_key
    #  variableInConf: ER_KAFKA_CLIENT_KEY
    #  secretName: kafka-client-key
    #  createSecretFile: false
    #  localFile: {} # conf/kafka_client_key.pem
    #  existingSecretFile:
    #    keyRef: {} # key inside the secret

####################################
# STORAGE
####################################
## Volumes are only needed if using files (file-writer and file-reader)

### DEFAULT STORAGE (RUNTIME) ###

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: false

  ## persistence.keep Keep persistent volume after helm delete
  keep: false

  eventrouterData:
    ## Axway Event Router Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass:

    ## Axway Event Router Persistent Volume AccessMode
    ## When replicaCount > 1, this should be ReadWriteMany (the volume can be mounted
    ## as read-write by many nodes). This mode is not supported by some of the
    ## default provisioners.
    ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
    accessMode: ReadWriteOnce
    size: 4Gi

    ## A manually managed Persistent Volume Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    ##
    # existingClaim:

    ## NFS-specific information if NFS is to be used
    # nfsPath:
    # nfsServer:

    ## Retain, Recycle or Delete.
    ## Only NFS support recycling
    ## https://kubernetes.io/docs/concepts/storage/persistent-volumes/#reclaim-policy
    # reclaimPolicy:

    ## When using NFS, additional mount options can be set.
    ## https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options
    # mountOptions: []
    ## If using NFS the recommended options are:
    # mountOptions:
    #   - vers=4
    #   - hard
    #   - nointr
    #   - lock
    #   - local_lock=none
    #   - cto
    #   - async

### OTHER MOUNTS () ###

## Additional Event Router volume mounts
## Defines additional volume mounts.
extraVolumeMounts: []
## Uncomment these for enabling.
  # - name: event-router-app-data
  #   mountPath: /mnt/event-router-app-data
  #   readOnly: false
  #   existingClaim: volume-claim

####################################
# ENVIRONMENT VARIABLES
####################################

## Additional environment variables
# Defines additional environment variables.
extraEnv: []

####################################
# NETWORK
####################################

## Service configuration
## To expose the service within the cluster only, use ClusterIP.
## To expose the service externally use the type LoadBalancer.
##
service:
  type: ClusterIP

  # 
  # Ports defined as input in event-router.yml configuration should be declared here
  # 
  ports:
    - name: qltIn
      port: 1325
      # protocol: TCP
      # nodePort: 1325
      # targetPort: 1325
      # variableInConf: ER_QLT_IN

  annotations: {}
    # service.beta.kubernetes.io/aws-load-balancer-backend-protocol: https
    # external-dns.alpha.kubernetes.io/hostname: ER_FQDN.
