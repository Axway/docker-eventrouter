{{- $fullName := include "event-router.fullname" . -}}
{{- $labels := include "event-router.labels" . -}}
{{- $podLabels := .Values.podLabels -}}
{{- $releaseNamespace := .Release.Namespace -}}

{{ if .Values.eventrouter.ssl.cert.createSecretFile }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $fullName }}-{{ .Values.eventrouter.ssl.cert.secretName }}
  namespace: {{ $releaseNamespace | quote }}
  labels:
    {{- $labels | nindent 4 }}
    {{- if $podLabels }}
    {{- toYaml $podLabels | nindent 4 }}
    {{- end }}
type: Opaque
data:
  {{ .Values.eventrouter.ssl.cert.secretName | quote }} : |-
    {{ .Files.Get .Values.eventrouter.ssl.cert.localFile | b64enc }}
{{ end -}}

{{- if .Values.eventrouter.ssl.certPassword.createSecretFile }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $fullName }}-{{ .Values.eventrouter.ssl.certPassword.secretName }}
  namespace: {{ $releaseNamespace | quote }}
  labels:
    {{- $labels | nindent 4 }}
    {{- if $podLabels }}
    {{- toYaml $podLabels | nindent 4 }}
    {{- end }}
type: Opaque
data:
  {{ .Values.eventrouter.ssl.certPassword.secretName | quote }} : |-
    {{ .Files.Get .Values.eventrouter.ssl.certPassword.localFile | b64enc }}
{{ end -}}

{{- if .Values.eventrouter.defaultTarget}}
{{- if and (.Values.eventrouter.defaultTarget.ssl.cert.secretName) (or .Values.eventrouter.defaultTarget.ssl.cert.createSecretFile .Values.eventrouter.defaultTarget.ssl.cert.existingSecretFile) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $fullName }}-{{ .Values.eventrouter.defaultTarget.ssl.cert.secretName }}
  namespace: {{ $releaseNamespace | quote }}
  labels:
    {{- $labels | nindent 4 }}
    {{- if $podLabels }}
    {{- toYaml $podLabels | nindent 4 }}
    {{- end }}
type: Opaque
data:
  {{ .Values.eventrouter.defaultTarget.ssl.cert.secretName | quote }} : |-
    {{ .Files.Get .Values.eventrouter.defaultTarget.ssl.cert.localFile | b64enc }}
{{ end -}}
{{ end -}}

{{- range .Values.eventrouter.targets }}
{{- if and (.ssl.cert.secretName) (or .ssl.cert.createSecretFile .ssl.cert.existingSecretFile) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $fullName }}-{{ .ssl.cert.secretName }}
  namespace: {{ $releaseNamespace | quote }}
  labels:
    {{- $labels | nindent 4 }}
    {{- if $podLabels }}
    {{- toYaml $podLabels | nindent 4 }}
    {{- end }}
type: Opaque
data:
  {{ .ssl.cert.secretName | quote }} : |-
    {{ .Files.Get .ssl.cert.localFile | b64enc }}
{{ end -}}
{{ end -}}
